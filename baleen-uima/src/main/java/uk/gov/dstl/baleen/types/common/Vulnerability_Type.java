//NCA (c) Crown Copyright 2017
package uk.gov.dstl.baleen.types.common;

import org.apache.uima.cas.FeatureStructure;
import org.apache.uima.cas.Type;
import org.apache.uima.cas.impl.CASImpl;
import org.apache.uima.cas.impl.FSGenerator;
import org.apache.uima.cas.impl.TypeImpl;
import org.apache.uima.jcas.JCas;
import org.apache.uima.jcas.JCasRegistry;
import uk.gov.dstl.baleen.types.semantic.Entity_Type;

/** Cyber vulnerabilities
 * @generated */
public class Vulnerability_Type extends Entity_Type {
    /** @generated
     * @return the generator for this type
     */
    @Override
    protected FSGenerator getFSGenerator() {return fsGenerator;}
    /** @generated */
    private final FSGenerator fsGenerator =
            new FSGenerator() {
                public FeatureStructure createFS(int addr, CASImpl cas) {
                    if (Vulnerability_Type.this.useExistingInstance) {
                        // Return eq fs instance if already created
                        FeatureStructure fs = Vulnerability_Type.this.jcas.getJfsFromCaddr(addr);
                        if (null == fs) {
                            fs = new Vulnerability(addr, Vulnerability_Type.this);
                            Vulnerability_Type.this.jcas.putJfsFromCaddr(addr, fs);
                            return fs;
                        }
                        return fs;
                    } else return new Vulnerability(addr, Vulnerability_Type.this);
                }
            };
    /** @generated */
    @SuppressWarnings ("hiding")
    public final static int typeIndexID = Vulnerability.typeIndexID;
    /** @generated
     @modifiable */
    @SuppressWarnings ("hiding")
    public final static boolean featOkTst = JCasRegistry.getFeatOkTst("Vulnerability");



    /** initialize variables to correspond with Cas Type and Features
     * @generated
     * @param jcas JCas
     * @param casType Type
     */
    public Vulnerability_Type(JCas jcas, Type casType) {
        super(jcas, casType);
        casImpl.getFSClassRegistry().addGeneratorForType((TypeImpl)this.casType, getFSGenerator());

    }
}
